[paths]
instances_dir = datasets
results_dir = results
logs_dir = logs

[algorithm]
max_runtime = 600
strategy = pli  
; Opções 'greedy' ou 'heuristic'
seed = 42
use_pulp = True
model_type = mip  
; mip, lp, heuristic
solver = GLPK      
; CBC, GLPK, CPLEX, GUROBI, HIGHS
use_gpu = False   
; Tenta usar GPU para solvers que suportam (HiGHS)
small_instance_threshold = 1000
; número máximo de pedidos para usar PLI

[constraints]
wave_size_min_factor = 1.0
wave_size_max_factor = 1.0
enforce_full_orders = True
soft_constraints = true  
; usar restrições rígidas (False) ou penalizações (True)

[objective]
; Parâmetros da função objetivo principal
productivity_weight = 1.0
order_count_weight = 0.0
normalize = True
objective_method = dinkelbach  
; Tentar método Dinkelbach em vez de Charnes-Cooper

[model]
; Configurações do modelo matemático de programação linear
formulation = lagrangian_augmented  
; standard, lagrangian_augmented, penalization
bigM = 500            
; Valor para técnica Big-M nas restrições
optimize_timeout = 30   
; Tempo em segundos para cada otimização

; Original restrictions (now included in objective with penalties)
; ∑_{o∈O} ∑_{i∈I_o} u_{oi} * x_o ≥ LB
; ∑_{o∈O} ∑_{i∈I_o} u_{oi} * x_o ≤ UB
; ∑_{o∈O} u_{oi} * x_o ≤ ∑_{a∈A} u_{ai} * y_a, ∀i∈I, ∀o∈O
; w_o ≤ x_o, ∀o∈O
; w_o ≤ M * z, ∀o∈O
; w_o ≥ x_o + M * (z - 1), ∀o∈O
; ∑_{a∈A} y_a * z = 1

[linearization]
; Configurações para a linearização da função objetivo fracionária
; Original: max  ∑_{o∈O'} ∑_{i∈I_o} u_{oi} / |A'|
; Linearizada: max ∑_{o∈O} ∑_{i∈I_o} u_{oi} * w_o
inverse_corr_var = True     
; Usar variável z = 1/|A'|
use_mccormick = True        
; Usar inequações de McCormick para linearizar w_o = z * x_o
fractional_approximation = exact  
; exact, charnes_cooper, dinkelbach

[lagrangian]
; Configurações para o método do Lagrangeano Aumentado
enabled = True         
; Ativar método do Lagrangeano Aumentado
rho_initial = 10.0      
; Parâmetro de reforço inicial (ρ)
lambda_update_factor = 1.2  
; Fator para atualização dos multiplicadores λ
max_iterations = 20     
; Número máximo de iterações do algoritmo
convergence_tolerance = 0.001  
; Tolerância para convergência

; Multiplicadores de Lagrange iniciais
lambda_lb_initial = 0.0    
; Inicial para limite inferior (LB)
lambda_ub_initial = 0.0    
; Inicial para limite superior (UB)
lambda_coverage_initial = 0.0  
; Inicial para cobertura de itens

[penalties]
; Penalidades para violações de restrições na função objetivo
lb_penalty = 350.0     
; Penalidade para violação do limite inferior da wave
ub_penalty = 150.0     
; Penalidade para violação do limite superior da wave
item_coverage_penalty = 1000.0  
; Penalidade para violações de cobertura de itens
linearization_penalty = 500.0   
; Penalidade para violações nas restrições de linearização

[piecewise]
; Configurações para linearização por partes dos termos quadráticos
enabled = True         
; Ativar linearização por partes
num_breakpoints = 5     
; Número de pontos de quebra para linearização
max_violation = 10      
; Valor máximo de violação considerado para linearização
scaling_factor = 100    ;
 Fator de escala para melhorar precisão numérica

; Pontos de quebra para cada tipo de restrição (se especificados manualmente)
lb_breakpoints = 0,2,5,8,10   
; Pontos para linearização da restrição LB
ub_breakpoints = 0,2,5,8,10   
; Pontos para linearização da restrição UB
coverage_breakpoints = 0,1,2,3,5   
; Pontos para restrições de cobertura

[augmented_objective]
; Configuração para a função objetivo aumentada com penalidades
; max ∑_{o∈O} ∑_{i∈I_o} u_{oi} * w_o + ∑_{j=1}^3 λ_j * g_j(x) - ∑_{j=1}^3 ρ_j * ∑_{k=0}^{K_j} (t_k^{(j)})^2 * α_k^{(j)}
use_original_term = True  
; Incluir termo original: ∑_{o∈O} ∑_{i∈I_o} u_{oi} * w_o
use_lagrange_terms = True 
; Incluir termos com multiplicadores de Lagrange
use_piecewise_terms = True 
; Incluir aproximação por partes dos termos quadráticos
dynamic_penalties = True  
; Ajustar penalidades dinamicamente durante a otimização

[heuristic]
; Configurações para métodos heurísticos
construction_method = greedy  
; random, greedy, priority_based
local_search = True           
; Usar busca local para melhorar a solução
improvement_threshold = 0.001  
; Limiar para aceitar melhorias
max_iterations = 10000        
; Número máximo de iterações da heurística
time_limit_percent = 80       
; Percentual do tempo total reservado para heurística

[advanced_linearization]
; Técnicas avançadas de linearização
use_disaggregated_mccormick = False  
; Usar versão desagregada das inequações de McCormick
use_perspective_formulation = False  
; Usar formulação de perspectiva para produtos bilineares
use_sos2_variables = False     
; Usar variáveis SOS2 para linearização por partes
lambda_fixing_heuristic = True  
; Heurística para fixar multiplicadores de Lagrange

[cuda]
include_path = /nix/store/3cygpvg4ig5nl1w89ss85g4p8zzm57wg-cuda-merged-12.4/include